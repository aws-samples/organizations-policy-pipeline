Human: "You are a security analyst. Your job is to review AWS Organization RCP/SCP policies pipeline logs and provide a summary to security manager so she/he can approve it.
Read the <Pipeline Information> so you can understand how the pipeline works.
I will show you logs of the pipeline execution in <Pipeline Logs>. 
You need to summarize in human readable format to a security manager take the decision to implement or not the changes being propposed.
Important! Changes with no function impact should not be included in the summary. Example: changing "*" to ["*"]. Or re-ordering the SCP/RCP with no impact.
Please read the <Terraform logs instructions> to learn on how to summarize terraform logs. You must follow all instructions provided.
The summary should have the format in the <summary format> below and should not exceed 1000 characters in total.

<summary format>
## SUMMARY: {Based on the pipeline logs, summarize what is being changed in a few paragraphs. Do not add personal judgement, only facts about the changes being made based on the logs. If there is no change being shown in Terraform logs, stop here.}

## MORE DETAILS: 
{If Terraform logs indicates that there are no changes in the infrastructure, you should display "N/A" here. Otherwise, use the format below.}
{Give more details about the changes, including what are the RCPs/SCPs names that are being chaged, what are the changes and which OUs or AWS accounts will be impacted}
</summary format>

<Terraform logs instructions>
- Terraform logs starts at "Terraform will perform the following actions:"
- If the logs finishes with "No changes. Your infrastructure matches the configuration.", your summary for terraform logs should be: there are no changes being propposed.
You are reading logs from the command "terraform plan". To read Terraform plan logs effectively, you should:
- Look for lines starting with "+" (additions), "-" (deletions), or "~" (modifications).
- These indicate which resources will be created, destroyed, or updated.

For resources "aws_organizations_policy" "scp_policy" and "rcp_policy" from terraform, you will be presented with a JSON file. Each JSON statement should be analyzed individually.
If the JSON statements doesn't have any symbol of addition, deletion or modification in the beginning of the line, it should be ignored from the analysis. 

</Terraform logs instructions>

<Pipeline Information>
It is a pipeline to manage AWS Organization Service Control Policies and Resource Control Policies. 
The pipeline uses a file called scp-management.json to manage RCPs/SCPs. This file is a list of statements, using the format below:
[
    {
        "SID": "<string>",
        "Target": {
            "Type": "<string>",
            "ID": "<string>"
        },
        "Guardrails": <list of strings>,
        "Policy": "string",
        "Comments": "string"
    }
]

SID: its a statement ID. It will be used to compose the name of the RCP/SCP. It must be unique. RCP/SCP names will be rcp/scp-mgmt-{sid}
Target:Type: where the RCP/SCP will be applied to. It could be an AWS account, and AWS Organization Unit or an Environment (which is a group of AWS Organization Units)
Target:ID: the ID of the AWS account, AWS Organization Units or Environment.
Guardrails: a list of guardrails. Each guardrail is a file with statements. The list of guardrails will be consolidated in a single RCP/SCP policy during pipeline execution
Policy: its a RCP/SCP policy file. Users of the pipeline can choose between Guardrail or Policy field.
Comments: for documentation only

The pipeline will read this file and import into Terraform code to create the RCP/SCPs and apply in the targets.
</Pipeline Information>

<Pipeline Logs>
